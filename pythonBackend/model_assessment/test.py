import pandas as pd
from joblib import load
from sklearn.preprocessing import OneHotEncoder

# Load the pre-trained model and encoder
model = load('model/obesity_levels_model.joblib')
encoder = load('model/obesity_levels_encoder.joblib')  # Loaded encoder

# Define the new single data point as a DataFrame
data = {
    'Age': [25],
    'Gender': ['Male'],
    'Height': [1.82],
    'Weight': [82],
    'CALC': ['Sometimes'],
    'FAVC': ['Yes'],
    'FCVC': [2],
    'NCP': [3],
    'SCC': ['No'],
    'SMOKE': ['No'],
    'CH2O': [2],
    'family_history_with_overweight': ['yes'],
    'FAF': [2],
    'TUE': [1],
    'CAEC': ['Sometimes'],
    'MTRANS': ['Public_Transportation']  # Make sure all expected columns are present
}
df = pd.DataFrame(data)

# Prepare DataFrame for model prediction as done previously
# This part should now include all necessary steps including any dummy data setup for missing columns

# Encode categorical features
categorical_features = ['Gender', 'CALC', 'FAVC', 'SCC', 'SMOKE', 'family_history_with_overweight', 'CAEC', 'MTRANS']
df_categorical = df[categorical_features]
encoded_data = encoder.transform(df_categorical)

# Obtain names of the features generated by OneHotEncoder
one_hot_feature_names = encoder.get_feature_names_out()

# Create a DataFrame with transformed features
df_encoded = pd.DataFrame(encoded_data, columns=one_hot_feature_names)

# Joining DataFrames
df_final = pd.concat([df.drop(categorical_features, axis=1), df_encoded], axis=1)

# Predict using the model
prediction = model.predict(df_final)
print(f"The predicted obesity level is: {prediction[0]}")
